import zipfile

from PIL import Image
import pytesseract
import cv2 as cv
import numpy as np

# loading the face detection classifier
face_cascade = cv.CascadeClassifier('readonly/haarcascade_frontalface_default.xml')

# the rest is up to you!
images={}   #dictionary for images
names=[]    #list of image_names
def unzip(zipname):
    '''
    Takes a zipfile(.zip) and iterates over each image using .infolist()
    to extract all image_names and create a list of names
    '''
    zf=zipfile.ZipFile(zipname)
    for each in zf.infolist():
        images[each.filename]=[Image.open(zf.open(each.filename))]
        names.append(each.filename)
        print(each.filename)
if __name__=='__main__':
    unzip('readonly/images.zip')
    for name in names:
        display(images[name][0])
        print(name)
        img=images[name][0]
        images[name].append(pytesseract.image_to_string(img).replace('-\n','')) #ommission of line seperators -\n
        print(images[name][1])
        if 'Mark' in images[name][1]:
            print('Results found in file',name)
            try:
                faces=(face_cascade.detectMultiScale(np.array(img),1.35,4)).tolist() #bounding boxes of all faces detected in each image over iteration
                images[name].append(faces)
                faces_each=[]
                for x,y,w,h in images[name][2]:
                    faces_each.append(img.crop((x,y,x+w,y+h)))
                contact_sheet=Image.new(img.mode,(550,110*int(np.ceil(len(faces_each/5)))))
                x=0
                y=0
                for face in faces_each:  #iterates over each face to paste to contactsheet
                    face.thumbnail((110,110))
                    contact_sheet.paste(face,(x,y))
                    if x+110==contact_sheet.width:
                        x=0
                        y=y+110
                    else:
                        x=x+110
                        display(contact_sheet)
            except:
                print('But there were no faces in the file!')
